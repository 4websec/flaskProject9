# app.py located at c:\Code\flaskProject9\yourapp\app.py
from flask import Flask
from .extensions import db, login_manager
from .config import Config
from flask_migrate import Migrate
from apscheduler.schedulers.background import BackgroundScheduler
import os
from dotenv import load_dotenv

load_dotenv()
print("SECRET_KEY: ", os.getenv("SECRET_KEY"))
print("DATABASE_URL: ", os.getenv("DATABASE_URL"))

def create_app():
    # Load environment variables
    load_dotenv()

    app = Flask(__name__)
    app.config.from_object('yourapp.config.Config')


    # Initialize extensions
    db.init_app(app)
    migrate = Migrate(app, db)
    login_manager.init_app(app)

    # User loader for Flask-Login
    @login_manager.user_loader
    def load_user(user_id):
        from .models import User
        return User.query.get(int(user_id))

    # Register Blueprints
    from yourapp.main.routes import main
    app.register_blueprint(main)

    # Initialize scheduler
    scheduler = BackgroundScheduler()
    with app.app_context():
        from .tasks import daily_check
        scheduler.add_job(daily_check, 'cron', hour=6, minute=15)
        scheduler.start()

    return app


# __init__.py located at c:\Code\flaskProject9\yourapp\__init__.py

from flask import Flask
from .extensions import db, login_manager
from .config import Config
from flask_migrate import Migrate
from .main import main as main_blueprint


def create_app():
    app = Flask(__name__)

    # Apply configuration
    app.config.from_object(Config)

    # Initialize extensions with the app instance
    db.init_app(app)
    migrate = Migrate(app, db)
    login_manager.init_app(app)

    # Initialize Blueprints
    app.register_blueprint(main_blueprint, url_prefix='/')
    return app
